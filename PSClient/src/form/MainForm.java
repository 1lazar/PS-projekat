/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import Communication.Communication;
import domain.Pacijent;
import domain.TerminPregleda;
import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Formatter;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import domain.Naocare;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import operation.Operation;
import table.PacijentiTabele;
import transfer.Request;
import transfer.Response;

/**
 *
 * @author Laza Laki Lakosta
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        populateForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIme = new javax.swing.JLabel();
        lblPrezime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        poljeIme = new javax.swing.JTextField();
        poljePrezime = new javax.swing.JTextField();
        poljeTelefon = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPacijente = new javax.swing.JTable();
        btnRacun = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        btnDetalji = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        poljeDioptrija = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        poljeMarka = new javax.swing.JTextField();
        poljeKolicina = new javax.swing.JTextField();
        btnSacuvaj = new javax.swing.JButton();
        btnPregledStanja = new javax.swing.JButton();
        lblStanje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblIme.setText("Ime:");

        lblPrezime.setText("Prezime:");

        jLabel1.setText("Telefon:");

        jLabel2.setText("Izaberite opticara:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aleksandra Todorovic", "Mirjana Stevanoski" }));

        tblPacijente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPacijente);

        btnRacun.setText("Racun");
        btnRacun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRacunActionPerformed(evt);
            }
        });

        jLabel3.setText("Datum:");

        btnDetalji.setText("Detalji");
        btnDetalji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetaljiActionPerformed(evt);
            }
        });

        jLabel4.setText("Dioptrija:");

        jLabel5.setText("Marka:");

        jLabel6.setText("Kolicina:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnPregledStanja.setText("Pregled stanja");
        btnPregledStanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPregledStanjaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(poljeKolicina, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(poljeMarka))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(btnSacuvaj))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(btnPregledStanja)
                                .addGap(37, 37, 37)
                                .addComponent(lblStanje))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPrezime)
                                    .addComponent(lblIme))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(15, 15, 15)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(poljeTelefon, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(poljeIme, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poljePrezime, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDatum, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(poljeDioptrija)))))
                    .addComponent(btnRacun)
                    .addComponent(btnDetalji))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(poljeIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrezime)
                    .addComponent(poljePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(poljeTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(poljeDioptrija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetalji)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(poljeMarka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSacuvaj))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(poljeKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPregledStanja)
                    .addComponent(lblStanje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(btnRacun)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRacunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRacunActionPerformed
        int row = tblPacijente.getSelectedRow();
        TerminPregleda pregled=null;
        if(row >= 0){
            PacijentiTabele model = (PacijentiTabele)tblPacijente.getModel();
            Pacijent pacijent = model.getPacijent(row);
            try {
                Request reqest = new Request(null, Operation.GET_ALL_TERMIN_PREGLEDA);
                Communication.getInstance().getSender().send(reqest);
                Response response = (Response) Communication.getInstance().getReceiver().receive();
                if(response.getException()==null){
                    List<TerminPregleda> pregledi = (List<TerminPregleda>) response.getResult();
                    for(TerminPregleda tp : pregledi){
                        System.out.println(pacijent.getPacijentId()+"="+tp.getPacijentId());
                        if(pacijent.getPacijentId() == tp.getPacijentId()){
                            pregled = tp;
                        }
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            RacunForm pf = new RacunForm(pacijent,pregled);
            pf.setVisible(true);
        }

        else{
            String ime = poljeIme.getText();
            String prezime = poljePrezime.getText();
            int telefon = Integer.parseInt( poljeTelefon.getText());
            double dioptrija = Double.parseDouble(poljeDioptrija.getText());

            
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-M-dd");
            int opticar = jComboBox1.getSelectedIndex()+1;
            LocalDate datum = null;
            System.out.println(txtDatum.getText());
            datum = LocalDate.parse(txtDatum.getText());
            //System.out.println(datum);
            //Pacijent p = new Pacijent(PROPERTIES+1, ime, prezime, telefon,dioptrija);
            Pacijent p=new Pacijent();
            p.setIme(ime);
            p.setPrezime(prezime);
            p.setKontaktTelefon(telefon);
            p.setDioptrija(dioptrija);
            try {
                Request request = new Request(p, Operation.SAVE_PACIJENT);
                Communication.getInstance().getSender().send(request);
                Response response = (Response) Communication.getInstance().getReceiver().receive();
                
                Pacijent pacijent = null;
                
                request = new Request(null, Operation.GET_ALL_PACIJENTE);
                Communication.getInstance().getSender().send(request);
                response = (Response) Communication.getInstance().getReceiver().receive();
                if(response.getException()==null){
                    List<Pacijent> pacijente = (List<Pacijent>) response.getResult();
                    for(Pacijent pa:pacijente){
                        if(pa.getIme().equals(p.getIme()) && pa.getPrezime().equals(p.getPrezime()) && pa.getKontaktTelefon()==p.getKontaktTelefon() && pa.getDioptrija()==p.getDioptrija()){
                            pacijent = pa;
                        }
                    }
                }
                //TerminPregleda tp = new TerminPregleda(PROPERTIES+1, datum, p.getPacijentId(), opticar);
                TerminPregleda tp = new TerminPregleda();
                tp.setDatum(datum);
                tp.setPacijentId(pacijent.getPacijentId());
                tp.setOpticarId(opticar);
                request = new Request(tp, Operation.SAVE_TERMIN_PREGLEDA);
                Communication.getInstance().getSender().send(request);
                response = (Response) Communication.getInstance().getReceiver().receive();
                

                RacunForm pf = new RacunForm(p,tp);
                pf.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_btnRacunActionPerformed

    private void btnDetaljiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetaljiActionPerformed
        int row = tblPacijente.getSelectedRow();
        if(row >= 0){
            PacijentiTabele model = (PacijentiTabele)tblPacijente.getModel();
            Pacijent pacijent = model.getPacijent(row);
            PacijentForm pf = new PacijentForm(pacijent);
            pf.setVisible(true);
        }
        else{
            JOptionPane.showMessageDialog(this, "Selektujte nekog pacijenta");
        }
    }//GEN-LAST:event_btnDetaljiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
      
        int provera = 0;
        try {
            Request request = new Request(null, Operation.GET_ALL_NAOCARE);
            Communication.getInstance().getSender().send(request);
            Response response = (Response) Communication.getInstance().getReceiver().receive();
            
            if(response.getException()==null){
                List<Naocare> naocare = (List<Naocare>) response.getResult();
                
                String marka = poljeMarka.getText();
                int kolicina = Integer.parseInt(poljeKolicina.getText());
                for(Naocare n:naocare){
                    if(n.getMarka().equals(marka)){
                        int broj = n.getKolicina();
                        broj += kolicina;
                        n.setKolicina(broj);
                        provera = 1;
                    }
                }
                if(provera == 0){
                    Naocare nac = new Naocare(WIDTH, marka,null, kolicina);
                    request = new Request(null, Operation.SAVE_NAOCARE);
                    Communication.getInstance().getSender().send(request);
                    response = (Response) Communication.getInstance().getReceiver().receive();
                }
                else{
                    request = new Request(naocare, Operation.UPDATE_NAOCARE);
                    Communication.getInstance().getSender().send(request);
                    response = (Response) Communication.getInstance().getReceiver().receive();
                }
            }
           
            
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnPregledStanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPregledStanjaActionPerformed
      
        String marka = poljeMarka.getText();
        String tekst = null;
        try {
            Request request = new Request(null, Operation.GET_ALL_NAOCARE);
            Communication.getInstance().getSender().send(request);
            Response response = (Response) Communication.getInstance().getReceiver().receive();
            
            if(response.getException()==null){
                List<Naocare> naocare = (List<Naocare>) response.getResult();
                for(Naocare n : naocare){
                if(n.getMarka().equals(marka)){
                    tekst = "Kolicina proizvoda "+n.getMarka()+" je "+n.getKolicina();
                }
            }
            lblStanje.setText(tekst);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnPregledStanjaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalji;
    private javax.swing.JButton btnPregledStanja;
    private javax.swing.JButton btnRacun;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JLabel lblStanje;
    private javax.swing.JTextField poljeDioptrija;
    private javax.swing.JTextField poljeIme;
    private javax.swing.JTextField poljeKolicina;
    private javax.swing.JTextField poljeMarka;
    private javax.swing.JTextField poljePrezime;
    private javax.swing.JTextField poljeTelefon;
    private javax.swing.JTable tblPacijente;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables

    private void populateForm() {
        try {
            Request request = new Request(null, Operation.GET_ALL_PACIJENTE);
            Communication.getInstance().getSender().send(request);
            Response response = (Response) Communication.getInstance().getReceiver().receive();
            if (response.getException() == null) {
                List<Pacijent> pacijenti = (List<Pacijent>) response.getResult();
                tblPacijente.setModel(new PacijentiTabele(pacijenti));
            }
            
            
            
            
//            int red = tblPacijente.getSelectedRow()+1;
//            Pacijent pacijent = pacijenti.get(red);
//            poljeIme.setText(pacijent.getIme());
            
           
        } catch (Exception ex) {
            Logger.getLogger(PacijentiTabele.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
