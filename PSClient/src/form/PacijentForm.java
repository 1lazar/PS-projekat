/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;


import Communication.Communication;
import domain.Pacijent;
import domain.StatistikaOdUsluga;
import domain.TerminPregleda;
import domain.Usluga;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import operation.Operation;
import table.PacijentiTabele;
import transfer.Request;
import transfer.Response;

/**
 *
 * @author Laza Laki Lakosta
 */
public class PacijentForm extends javax.swing.JFrame {
    Pacijent pac;
    /**
     * Creates new form PacijentForm
     */
    public PacijentForm() {
        initComponents();
//        iskljuci();
    }
    public PacijentForm(java.awt.Frame parent, boolean modal) {
        initComponents();
        formWindowActivated(); 
    }
    public PacijentForm(Pacijent p) {
        initComponents();
        this.setLocationRelativeTo(null);
        formWindowActivated();
        pac=p;
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        poljeTelefon = new javax.swing.JTextField();
        poljeDioptrijaLevogOka = new javax.swing.JTextField();
        poljePrezime = new javax.swing.JTextField();
        poljeIme = new javax.swing.JTextField();
        btnIzmeni = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        btnOmoguciIzmene = new javax.swing.JButton();
        btnIzbrisi = new javax.swing.JButton();
        poljeId = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        textId = new javax.swing.JLabel();
        textIme = new javax.swing.JLabel();
        textPrezime = new javax.swing.JLabel();
        textDioptrijaDesnogOka = new javax.swing.JLabel();
        textKT = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        poljeDioptrijaDesnogOka = new javax.swing.JTextField();
        textDioptrijaLevogOka = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        poljePD = new javax.swing.JTextField();
        textDioptrijaDesnogOka1 = new javax.swing.JLabel();
        btnOtkazi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ime:");

        jLabel2.setText("Prezime:");

        jLabel3.setText("Dioptrija desnog oka:");

        jLabel4.setText("Kontakt telefon:");

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnOmoguciIzmene.setText("Omoguci izmene");
        btnOmoguciIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOmoguciIzmeneActionPerformed(evt);
            }
        });

        btnIzbrisi.setText("Izbrisi");
        btnIzbrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbrisiActionPerformed(evt);
            }
        });

        lblId.setText("ID:");

        textDioptrijaDesnogOka.setText(" ");

        jLabel5.setText("Dioptrija levog oka:");

        textDioptrijaLevogOka.setText(" ");

        jLabel6.setText("PD:");

        textDioptrijaDesnogOka1.setText(" ");

        btnOtkazi.setText("Otkazi");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textDioptrijaDesnogOka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(poljeDioptrijaDesnogOka)
                            .addComponent(poljePD, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(textDioptrijaDesnogOka1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textDioptrijaLevogOka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(textPrezime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(textId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(poljeId, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                                .addComponent(poljeIme)
                                                .addComponent(poljePrezime)
                                                .addComponent(textIme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(poljeDioptrijaLevogOka, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btnIzmeni)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSacuvaj)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnOmoguciIzmene)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnIzbrisi)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnOtkazi)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textKT, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(poljeTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poljeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId))
                .addGap(4, 4, 4)
                .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(poljeIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(textIme, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(poljePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(poljeDioptrijaLevogOka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textDioptrijaLevogOka, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(poljeDioptrijaDesnogOka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textDioptrijaDesnogOka1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(poljePD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textDioptrijaDesnogOka, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(poljeTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(textKT, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeni)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnOmoguciIzmene)
                    .addComponent(btnIzbrisi)
                    .addComponent(btnOtkazi))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOmoguciIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOmoguciIzmeneActionPerformed
//        btnIzmeni.setEnabled(true);
//        btnOmoguciIzmene.setEnabled(true);
//        btnSacuvaj.setEnabled(true);
//        btnIzbrisi.setEnabled(true);
//        poljeIme.setEditable(true);
//        poljePrezime.setEditable(true);
//        poljeTelefon.setEditable(true);
//        poljeDioptrijaLevogOka.setEditable(true);
//        poljeDioptrijaDesnogOka.setEditable(true);
//        poljePD.setEditable(true);
//        poljeId.setEditable(true);
        
    }//GEN-LAST:event_btnOmoguciIzmeneActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
//        try {
//            validacija();
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Fill in the fields");
//        }
//        int id = Integer.parseInt(poljeId.getText());
//        String ime = poljeIme.getText();
//        String prezime = poljePrezime.getText();
//        int broj = Integer.parseInt(poljeTelefon.getText());
//        double dioptrijaLO = Double.parseDouble(poljeDioptrijaLevogOka.getText());
//        double dioptrijaDO = Double.parseDouble(poljeDioptrijaDesnogOka.getText());
//        double pd = Double.parseDouble(poljePD.getText());
//        
//        try {
//            
//            Pacijent p = new Pacijent(id, ime, prezime, broj, dioptrijaLO,dioptrijaDO,pd);
//            Communication.getInstance().editPacijent(p);
//        } catch (Exception ex) {
//            Logger.getLogger(PacijentForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//            
    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
//        try {
//            validacija();
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(this, "Fill in the fields");
//        }
//        int id = Integer.parseInt(poljeId.getText());
//        String ime = poljeIme.getText();
//        String prezime = poljePrezime.getText();
//        int broj = Integer.parseInt(poljeTelefon.getText());
//        double dioptrijaLO = Double.parseDouble(poljeDioptrijaLevogOka.getText());
//        double dioptrijaDO = Double.parseDouble(poljeDioptrijaDesnogOka.getText());
//        double pd = Double.parseDouble(poljePD.getText());
//
//        try {
//            Pacijent p = new Pacijent(id, ime, prezime, broj, dioptrijaLO,dioptrijaDO,pd);
//            Communication.getInstance().addPacijent(p);
//        } catch (Exception ex) {
//            Logger.getLogger(PacijentForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnIzbrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbrisiActionPerformed
//        String ime = poljeIme.getText();
//        String prezime = poljePrezime.getText();
//        int broj = Integer.parseInt(poljeTelefon.getText());
//        double dioptrija = Double.parseDouble(poljeDioptrija.getText());
//       
//        try {
//            Request request = new Request(null, Operation.GET_ALL_PACIJENTE);
//            Communication.getInstance().getSender().send(request);
//            Response response = (Response) Communication.getInstance().getReceiver().receive();
//            Pacijent pa = null;
//            if(response.getException()==null){
//                List<Pacijent> pacijenti = (List<Pacijent>) response.getResult();
//                //System.out.println(pacijenti);
//                for(Pacijent p : pacijenti){
//                    if(p.getIme().equals(ime) && p.getPrezime().equals(prezime) && p.getKontaktTelefon() == broj){
//                        pa = new Pacijent(p.getPacijentId(), ime, prezime, broj, dioptrija);
//                    }
//                }
//                request = new Request(null, Operation.GET_ALL_TERMIN_PREGLEDA);
//                Communication.getInstance().getSender().send(request);
//                response = (Response) Communication.getInstance().getReceiver().receive();
//               // List<TerminPregleda> tp = (List<TerminPregleda>) response.getResult();
//                if(response.getException()==null){
//                    List<TerminPregleda> tp = (List<TerminPregleda>) response.getResult();
//                    TerminPregleda termin;
//                    for(TerminPregleda tpp : tp){
//                        System.out.println(tpp.getPacijentId());
//                        if(tpp.getPacijentId() == pa.getPacijentId()){
//                            termin = new TerminPregleda(tpp.getTerminId(), tpp.getDatum(), tpp.getPacijentId(), tpp.getOpticarId());
//                            
//                            request = new Request(null, Operation.GET_ALL_USLUGE);
//                            Communication.getInstance().getSender().send(request);
//                            response = (Response) Communication.getInstance().getReceiver().receive();
//                            if(response.getException()==null){
//                                List<Usluga> usluge = (List<Usluga>) response.getResult();
//                                Usluga usluga;
//                                for(Usluga u:usluge){
//                                    if(u.getTerminPregledaId()==termin.getTerminId()){
//                                        usluga = new Usluga(u.getUslugaId(), u.getVrstaUsluge(), u.getCenaUsluge(), u.getTerminPregledaId());
//                                        
//                                        request = new Request(null, Operation.GET_ALL_STATISTIKA_OD_USLUGA);
//                                        Communication.getInstance().getSender().send(request);
//                                        response = (Response) Communication.getInstance().getReceiver().receive();
//                                        if(response.getException()==null){
//                                            List<StatistikaOdUsluga> sou = (List<StatistikaOdUsluga>) response.getResult();
//                                            
//                                            for(StatistikaOdUsluga s: sou){
//                                                if(s.getBrojUsluga()==usluga.getUslugaId()){
//                                                    request = new Request(s, Operation.DELETE_STATISTIKA_OD_USLUGE);
//                                                    Communication.getInstance().getSender().send(request);
//                                                    response = (Response) Communication.getInstance().getReceiver().receive();
//                                                }
//                                            }
//                                        }
//                                        request = new Request(usluga, Operation.DELETE_USLUGA);
//                                        Communication.getInstance().getSender().send(request);
//                                        response = (Response) Communication.getInstance().getReceiver().receive();
//                                    }
//                                }
//                            }
//                            request = new Request(termin, Operation.DELETE_TERMIN_PREGLEDA);
//                            Communication.getInstance().getSender().send(request);
//                            response = (Response) Communication.getInstance().getReceiver().receive();
//                        }
//                    }
//                    
//                }
//                
//                request = new Request(pa, Operation.DELETE_PACIJENT);
//                Communication.getInstance().getSender().send(request);
//                response = (Response) Communication.getInstance().getReceiver().receive();
//            }
//        } catch (Exception ex) {
//            Logger.getLogger(PacijentForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
        
        
    }//GEN-LAST:event_btnIzbrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PacijentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PacijentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PacijentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PacijentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PacijentForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzbrisi;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOmoguciIzmene;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblId;
    private javax.swing.JTextField poljeDioptrijaDesnogOka;
    private javax.swing.JTextField poljeDioptrijaLevogOka;
    private javax.swing.JTextField poljeId;
    private javax.swing.JTextField poljeIme;
    private javax.swing.JTextField poljePD;
    private javax.swing.JTextField poljePrezime;
    private javax.swing.JTextField poljeTelefon;
    private javax.swing.JLabel textDioptrijaDesnogOka;
    private javax.swing.JLabel textDioptrijaDesnogOka1;
    private javax.swing.JLabel textDioptrijaLevogOka;
    private javax.swing.JLabel textId;
    private javax.swing.JLabel textIme;
    private javax.swing.JLabel textKT;
    private javax.swing.JLabel textPrezime;
    // End of variables declaration//GEN-END:variables

//    public void validacija() throws Exception {
//        String error="";
//        String id = poljeId.getText();
//        String ime = poljeIme.getText();
//        String prezime = poljePrezime.getText();
//        String telefon = poljeTelefon.getText();
//        String dioptirjaLevogOka = poljeDioptrijaLevogOka.getText();
//        String dioptrijaDesnogOka = poljeDioptrijaDesnogOka.getText();
//        String pd = poljePD.getText();
//        
//        if(id==null || id.isEmpty()){
//            textId.setText("Id cannot be empty!");
//            error += "Id cannot be empty!\n";
//        }
//        if(ime==null || ime.isEmpty()){
//            textIme.setText("Name cannot be empty!");
//            error += "Ime cannot be empty!\n";
//        }
//        if(prezime==null || prezime.isEmpty()){
//            textPrezime.setText("Lastname cannot be empty!");
//            error += "Id cannot be empty!\n";
//        }
//        if(telefon==null || telefon.isEmpty()){
//            textKT.setText("Phone cannot be empty!");
//            error += "Phone cannot be empty!\n";
//        }
//        if(dioptrijaDesnogOka==null || dioptrijaDesnogOka.isEmpty()){
//            textDioptrijaDesnogOka.setText("Dioptrija cannot be empty!");
//            error += "Dioptrija cannot be empty!\n";
//        }
//        if(dioptirjaLevogOka==null || dioptirjaLevogOka.isEmpty()){
//            textDioptrijaDesnogOka.setText("Dioptrija cannot be empty!");
//            error += "Dioptrija cannot be empty!\n";
//        }
//        if(pd==null || pd.isEmpty()){
//            textDioptrijaDesnogOka.setText("PD cannot be empty!");
//            error += "PD cannot be empty!\n";
//        }
//        if (!error.isEmpty()) {
//            throw new Exception(error);
//        }
//    }
    private void formWindowActivated() 
    {
        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width-w)/2;
        int y = (dim.height-h)/2;

        // Move the window
        this.setLocation(x, y);
    }

    public JButton getBtnIzbrisi() {
        return btnIzbrisi;
    }

    public JButton getBtnIzmeni() {
        return btnIzmeni;
    }

    public JButton getBtnOmoguciIzmene() {
        return btnOmoguciIzmene;
    }

    public JButton getBtnSacuvaj() {
        return btnSacuvaj;
    }

    public JTextField getPoljeDioptrijaDesnogOka() {
        return poljeDioptrijaDesnogOka;
    }

    public JTextField getPoljeDioptrijaLevogOka() {
        return poljeDioptrijaLevogOka;
    }

    public JTextField getPoljeIme() {
        return poljeIme;
    }

    public JTextField getPoljePD() {
        return poljePD;
    }

    public JTextField getPoljePrezime() {
        return poljePrezime;
    }

    public JTextField getPoljeTelefon() {
        return poljeTelefon;
    }

    public JLabel getTextDioptrijaDesnogOka() {
        return textDioptrijaDesnogOka;
    }

    public JLabel getTextDioptrijaDesnogOka1() {
        return textDioptrijaDesnogOka1;
    }

    public JLabel getTextDioptrijaLevogOka() {
        return textDioptrijaLevogOka;
    }

    public JLabel getTextId() {
        return textId;
    }

    public JLabel getTextIme() {
        return textIme;
    }

    public JLabel getTextKT() {
        return textKT;
    }

    public JLabel getTextPrezime() {
        return textPrezime;
    }

    public JButton getBtnOtkazi() {
        return btnOtkazi;
    }

    public JTextField getPoljeId() {
        return poljeId;
    }
    public void addSacuvajBtnActionListener(ActionListener actionListener) {
        btnSacuvaj.addActionListener(actionListener);
    }

    public void addOmoguciIzmeneBtnActionListener(ActionListener actionListener) {
        btnOmoguciIzmene.addActionListener(actionListener);
    }

    public void addOtkaziBtnActionListener(ActionListener actionListener) {
        btnOtkazi.addActionListener(actionListener);
    }

    public void addIzmeniBtnActionListener(ActionListener actionListener) {
        btnIzmeni.addActionListener(actionListener);
    }

    public void addObrisiBtnActionListener(ActionListener actionListener) {
        btnIzbrisi.addActionListener(actionListener);
    }
    
}
